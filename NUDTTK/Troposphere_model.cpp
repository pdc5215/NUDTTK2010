#pragma once
#include "Troposphere_model.hpp"

namespace NUDTTK
{
	// 子程序名称： Saastamoinen_model   
	// 功能：用Saastamoinen模型计算对流层干湿分量的天顶延迟
	// 变量类型：temperature        : 温度（摄氏温度）， K氏温度=273.15+摄氏温度	
	//           humidity           : 湿度（相对湿度，%）,水汽压 = 相对湿度*6.11*pow(10，7.5*Temperature/(Temperature+273.15))
	//           pressure           : 大气压（毫巴,mBar），100Pa=1mBar	
	//           latitude           : 大地纬度，弧度
	//           height             : 测站高度，m
	//           zpdh               : 干分量的天顶延迟(hydrostatic zenith path delays)
	//           zpdw               : 湿分量的天顶延迟(wet zenith path delays)
	// 输入：temperature，humidity，pressure，latitude,height
	// 输出：zpdh，zpdw
	// 语言：C++
	// 创建者：刘俊宏
	// 创建时间：2012/10/17
	// 版本时间：
	// 修改记录：
	// 备注：因为先验模型无法准确计算湿分量，因此默认相对湿度为50%，后续定轨程序再估计湿分量的天顶延迟
	//       按照GAMIT计算电离层方法编写，参考(atmdel.f)(wpress.f)
	void Saastamoinen_model(double temperature,double humidity,double pressure,double latitude,double height,double &zpdh,double &zpdw)
	{		
		double  fbh = 1 - 0.00266 * cos(2 * latitude) - 0.28e-6 * height;	
		zpdh  = 0.002277 * pressure / fbh;
		double  e = humidity/100 * 6.11 * pow(10,7.5 * temperature / (temperature + 237.3));
		zpdw = 0.002277 * e * (1255/(temperature + 273.16) + 0.05) / fbh;		
	}
	// 子程序名称： GlobalPT   
	// 功能：根据测站经纬高计算压强和温度
	// 变量类型：dmjd               : 修正的儒略日(modified julian date)
	//           latitude           : 纬度，弧段
	//           longitude          : 经度，弧段
	//           height             : 测站高度，m
	//           pressure           : 压强，hPa
	//           temperature        : 温度，摄氏度
	//           undu               : 大地水准面波动，m（Geoid undulation in m (from a 9x9 EGM based model)）
	// 输入：dmjd，latitude，longitude，height
	// 输出：pressure，temperature,undu
	// 语言：C++
	// 创建者：刘俊宏
	// 创建时间：2012/10/21
	// 版本时间：
	// 修改记录：
	// 备注：参考GAMIT的gpt.f文件编写
	void GlobalPT(double dmjd,double latitude,double longitude,double height,double &pressure,double &temperature,double &undu)
	{
		double  dfac[20],P[10][10],aP[55],bP[55]               
               ,doy,t,apm,apa
               ,pres0,atm,ata,temp0,sum,hort;
	    doy = dmjd  - 44239 + 1 - 28;//年积日(44239为1980年1月1日)
		double  a_geoid[55] = {
			 -5.6195e-001,-6.0794e-002,-2.0125e-001,-6.4180e-002,-3.6997e-002,
			 +1.0098e+001,+1.6436e+001,+1.4065e+001,+1.9881e+000,+6.4414e-001,
			 -4.7482e+000,-3.2290e+000,+5.0652e-001,+3.8279e-001,-2.6646e-002,
			 +1.7224e+000,-2.7970e-001,+6.8177e-001,-9.6658e-002,-1.5113e-002,
			 +2.9206e-003,-3.4621e+000,-3.8198e-001,+3.2306e-002,+6.9915e-003,
			 -2.3068e-003,-1.3548e-003,+4.7324e-006,+2.3527e+000,+1.2985e+000,
			 +2.1232e-001,+2.2571e-002,-3.7855e-003,+2.9449e-005,-1.6265e-004,
			 +1.1711e-007,+1.6732e+000,+1.9858e-001,+2.3975e-002,-9.0013e-004,
			 -2.2475e-003,-3.3095e-005,-1.2040e-005,+2.2010e-006,-1.0083e-006,
			 +8.6297e-001,+5.8231e-001,+2.0545e-002,-7.8110e-003,-1.4085e-004,
			 -8.8459e-006,+5.7256e-006,-1.5068e-006,+4.0095e-007,-2.4185e-008};

		double b_geoid[55] = {
			 +0.0000e+000,+0.0000e+000,-6.5993e-002,+0.0000e+000,+6.5364e-002,
			 -5.8320e+000,+0.0000e+000,+1.6961e+000,-1.3557e+000,+1.2694e+000,
			 +0.0000e+000,-2.9310e+000,+9.4805e-001,-7.6243e-002,+4.1076e-002,
			 +0.0000e+000,-5.1808e-001,-3.4583e-001,-4.3632e-002,+2.2101e-003,
			 -1.0663e-002,+0.0000e+000,+1.0927e-001,-2.9463e-001,+1.4371e-003,
			 -1.1452e-002,-2.8156e-003,-3.5330e-004,+0.0000e+000,+4.4049e-001,
			 +5.5653e-002,-2.0396e-002,-1.7312e-003,+3.5805e-005,+7.2682e-005,
			 +2.2535e-006,+0.0000e+000,+1.9502e-002,+2.7919e-002,-8.1812e-003,
			 +4.4540e-004,+8.8663e-005,+5.5596e-005,+2.4826e-006,+1.0279e-006,
			 +0.0000e+000,+6.0529e-002,-3.5824e-002,-5.1367e-003,+3.0119e-005,
			 -2.9911e-005,+1.9844e-005,-1.2349e-006,-7.6756e-009,+5.0100e-008};

		double ap_mean[55] = {
			 +1.0108e+003,+8.4886e+000,+1.4799e+000,-1.3897e+001,+3.7516e-003,
			 -1.4936e-001,+1.2232e+001,-7.6615e-001,-6.7699e-002,+8.1002e-003,
			 -1.5874e+001,+3.6614e-001,-6.7807e-002,-3.6309e-003,+5.9966e-004,
			 +4.8163e+000,-3.7363e-001,-7.2071e-002,+1.9998e-003,-6.2385e-004,
			 -3.7916e-004,+4.7609e+000,-3.9534e-001,+8.6667e-003,+1.1569e-002,
			 +1.1441e-003,-1.4193e-004,-8.5723e-005,+6.5008e-001,-5.0889e-001,
			 -1.5754e-002,-2.8305e-003,+5.7458e-004,+3.2577e-005,-9.6052e-006,
			 -2.7974e-006,+1.3530e+000,-2.7271e-001,-3.0276e-004,+3.6286e-003,
			 -2.0398e-004,+1.5846e-005,-7.7787e-006,+1.1210e-006,+9.9020e-008,
			 +5.5046e-001,-2.7312e-001,+3.2532e-003,-2.4277e-003,+1.1596e-004,
			 +2.6421e-007,-1.3263e-006,+2.7322e-007,+1.4058e-007,+4.9414e-009}; 

		double bp_mean[55] = {
			 +0.0000e+000,+0.0000e+000,-1.2878e+000,+0.0000e+000,+7.0444e-001,
			 +3.3222e-001,+0.0000e+000,-2.9636e-001,+7.2248e-003,+7.9655e-003,
			 +0.0000e+000,+1.0854e+000,+1.1145e-002,-3.6513e-002,+3.1527e-003,
			 +0.0000e+000,-4.8434e-001,+5.2023e-002,-1.3091e-002,+1.8515e-003,
			 +1.5422e-004,+0.0000e+000,+6.8298e-001,+2.5261e-003,-9.9703e-004,
			 -1.0829e-003,+1.7688e-004,-3.1418e-005,+0.0000e+000,-3.7018e-001,
			 +4.3234e-002,+7.2559e-003,+3.1516e-004,+2.0024e-005,-8.0581e-006,
			 -2.3653e-006,+0.0000e+000,+1.0298e-001,-1.5086e-002,+5.6186e-003,
			 +3.2613e-005,+4.0567e-005,-1.3925e-006,-3.6219e-007,-2.0176e-008,
			 +0.0000e+000,-1.8364e-001,+1.8508e-002,+7.5016e-004,-9.6139e-005,
			 -3.1995e-006,+1.3868e-007,-1.9486e-007,+3.0165e-010,-6.4376e-010};

		double ap_amp[55] = {
			 -1.0444e-001,+1.6618e-001,-6.3974e-002,+1.0922e+000,+5.7472e-001,
			 -3.0277e-001,-3.5087e+000,+7.1264e-003,-1.4030e-001,+3.7050e-002,
			 +4.0208e-001,-3.0431e-001,-1.3292e-001,+4.6746e-003,-1.5902e-004,
			 +2.8624e+000,-3.9315e-001,-6.4371e-002,+1.6444e-002,-2.3403e-003,
			 +4.2127e-005,+1.9945e+000,-6.0907e-001,-3.5386e-002,-1.0910e-003,
			 -1.2799e-004,+4.0970e-005,+2.2131e-005,-5.3292e-001,-2.9765e-001,
			 -3.2877e-002,+1.7691e-003,+5.9692e-005,+3.1725e-005,+2.0741e-005,
			 -3.7622e-007,+2.6372e+000,-3.1165e-001,+1.6439e-002,+2.1633e-004,
			 +1.7485e-004,+2.1587e-005,+6.1064e-006,-1.3755e-008,-7.8748e-008,
			 -5.9152e-001,-1.7676e-001,+8.1807e-003,+1.0445e-003,+2.3432e-004,
			 +9.3421e-006,+2.8104e-006,-1.5788e-007,-3.0648e-008,+2.6421e-010}; 

		double bp_amp[55] = {
			 +0.0000e+000,+0.0000e+000,+9.3340e-001,+0.0000e+000,+8.2346e-001,
			 +2.2082e-001,+0.0000e+000,+9.6177e-001,-1.5650e-002,+1.2708e-003,
			 +0.0000e+000,-3.9913e-001,+2.8020e-002,+2.8334e-002,+8.5980e-004,
			 +0.0000e+000,+3.0545e-001,-2.1691e-002,+6.4067e-004,-3.6528e-005,
			 -1.1166e-004,+0.0000e+000,-7.6974e-002,-1.8986e-002,+5.6896e-003,
			 -2.4159e-004,-2.3033e-004,-9.6783e-006,+0.0000e+000,-1.0218e-001,
			 -1.3916e-002,-4.1025e-003,-5.1340e-005,-7.0114e-005,-3.3152e-007,
			 +1.6901e-006,+0.0000e+000,-1.2422e-002,+2.5072e-003,+1.1205e-003,
			 -1.3034e-004,-2.3971e-005,-2.6622e-006,+5.7852e-007,+4.5847e-008,
			 +0.0000e+000,+4.4777e-002,-3.0421e-003,+2.6062e-005,-7.2421e-005,
			 +1.9119e-006,+3.9236e-007,+2.2390e-007,+2.9765e-009,-4.6452e-009}; 

		double at_mean[55] = {
			 +1.6257e+001,+2.1224e+000,+9.2569e-001,-2.5974e+001,+1.4510e+000,
			 +9.2468e-002,-5.3192e-001,+2.1094e-001,-6.9210e-002,-3.4060e-002,
			 -4.6569e+000,+2.6385e-001,-3.6093e-002,+1.0198e-002,-1.8783e-003,
			 +7.4983e-001,+1.1741e-001,+3.9940e-002,+5.1348e-003,+5.9111e-003,
			 +8.6133e-006,+6.3057e-001,+1.5203e-001,+3.9702e-002,+4.6334e-003,
			 +2.4406e-004,+1.5189e-004,+1.9581e-007,+5.4414e-001,+3.5722e-001,
			 +5.2763e-002,+4.1147e-003,-2.7239e-004,-5.9957e-005,+1.6394e-006,
			 -7.3045e-007,-2.9394e+000,+5.5579e-002,+1.8852e-002,+3.4272e-003,
			 -2.3193e-005,-2.9349e-005,+3.6397e-007,+2.0490e-006,-6.4719e-008,
			 -5.2225e-001,+2.0799e-001,+1.3477e-003,+3.1613e-004,-2.2285e-004,
			 -1.8137e-005,-1.5177e-007,+6.1343e-007,+7.8566e-008,+1.0749e-009};

		double bt_mean[55] = {
			 +0.0000e+000,+0.0000e+000,+1.0210e+000,+0.0000e+000,+6.0194e-001,
			 +1.2292e-001,+0.0000e+000,-4.2184e-001,+1.8230e-001,+4.2329e-002,
			 +0.0000e+000,+9.3312e-002,+9.5346e-002,-1.9724e-003,+5.8776e-003,
			 +0.0000e+000,-2.0940e-001,+3.4199e-002,-5.7672e-003,-2.1590e-003,
			 +5.6815e-004,+0.0000e+000,+2.2858e-001,+1.2283e-002,-9.3679e-003,
			 -1.4233e-003,-1.5962e-004,+4.0160e-005,+0.0000e+000,+3.6353e-002,
			 -9.4263e-004,-3.6762e-003,+5.8608e-005,-2.6391e-005,+3.2095e-006,
			 -1.1605e-006,+0.0000e+000,+1.6306e-001,+1.3293e-002,-1.1395e-003,
			 +5.1097e-005,+3.3977e-005,+7.6449e-006,-1.7602e-007,-7.6558e-008,
			 +0.0000e+000,-4.5415e-002,-1.8027e-002,+3.6561e-004,-1.1274e-004,
			 +1.3047e-005,+2.0001e-006,-1.5152e-007,-2.7807e-008,+7.7491e-009}; 

		double at_amp[55] = {
			 -1.8654e+000,-9.0041e+000,-1.2974e-001,-3.6053e+000,+2.0284e-002,
			 +2.1872e-001,-1.3015e+000,+4.0355e-001,+2.2216e-001,-4.0605e-003,
			 +1.9623e+000,+4.2887e-001,+2.1437e-001,-1.0061e-002,-1.1368e-003,
			 -6.9235e-002,+5.6758e-001,+1.1917e-001,-7.0765e-003,+3.0017e-004,
			 +3.0601e-004,+1.6559e+000,+2.0722e-001,+6.0013e-002,+1.7023e-004,
			 -9.2424e-004,+1.1269e-005,-6.9911e-006,-2.0886e+000,-6.7879e-002,
			 -8.5922e-004,-1.6087e-003,-4.5549e-005,+3.3178e-005,-6.1715e-006,
			 -1.4446e-006,-3.7210e-001,+1.5775e-001,-1.7827e-003,-4.4396e-004,
			 +2.2844e-004,-1.1215e-005,-2.1120e-006,-9.6421e-007,-1.4170e-008,
			 +7.8720e-001,-4.4238e-002,-1.5120e-003,-9.4119e-004,+4.0645e-006,
			 -4.9253e-006,-1.8656e-006,-4.0736e-007,-4.9594e-008,+1.6134e-009}; 

		double bt_amp[55] = { 
			 +0.0000e+000,+0.0000e+000,-8.9895e-001,+0.0000e+000,-1.0790e+000,
			 -1.2699e-001,+0.0000e+000,-5.9033e-001,+3.4865e-002,-3.2614e-002,
			 +0.0000e+000,-2.4310e-002,+1.5607e-002,-2.9833e-002,-5.9048e-003,
			 +0.0000e+000,+2.8383e-001,+4.0509e-002,-1.8834e-002,-1.2654e-003,
			 -1.3794e-004,+0.0000e+000,+1.3306e-001,+3.4960e-002,-3.6799e-003,
			 -3.5626e-004,+1.4814e-004,+3.7932e-006,+0.0000e+000,+2.0801e-001,
			 +6.5640e-003,-3.4893e-003,-2.7395e-004,+7.4296e-005,-7.9927e-006,
			 -1.0277e-006,+0.0000e+000,+3.6515e-002,-7.4319e-003,-6.2873e-004,
			 -8.2461e-005,+3.1095e-005,-5.3860e-007,-1.2055e-007,-1.1517e-007,
			 +0.0000e+000,+3.1404e-002,+1.5580e-002,-1.1428e-003,+3.3529e-005,
			 +1.0387e-005,-1.9378e-006,-2.7327e-007,+7.5833e-009,-9.2323e-009}; 
		//    parameter t
        t = sin(latitude);

        //    degree n and order m
        int n = 9;
        int m = 9;

        // determine n!  //
        dfac[0] = 1;
	    for(int i = 0;i < 2 * n + 1;i++)
		   dfac[i+1] = dfac[i] * (i + 1);
		//determine Legendre functions (Heiskanen and Moritz, Physical Geodesy, 1967, eq. 1-62)
		for(int i = 0; i <= n; i++)
			for(int j = 0; j <= min(i,m);j++)
			{
				int ir = int((i - j)/2);
				sum = 0;				
				for(int k = 0;k <= ir; k++)
				{
					sum = sum + pow(-1.0,k)*dfac[2*i - 2*k]/dfac[k]/
                     dfac[i - k]/dfac[i - j - 2*k]*pow(t,i - j - 2*k);
				}
				//Legendre functions
				P[i][j] = 1/pow(2.0,i)*sqrt(pow(1 - pow(t,2),j))*sum;
			}
	    //    spherical harmonics
		int i = 0;
		for(int n = 0; n <= 9; n++)
			for(int m = 0; m <= n; m++)
			{				
				aP[i] = P[n][m] * cos(m * longitude);
				bP[i] = P[n][m] * sin(m * longitude);
				i = i + 1;
			}
		//     Geoidal height
        undu = 0.0;
		for(i = 0; i < 55; i++)
			undu = undu + (a_geoid[i] * aP[i] + b_geoid[i] * bP[i]);
        //     orthometric height
        hort = height - undu;
		//     Surface pressure

		apm = 0.0;
        apa = 0.0;
		for(int i = 0; i < 55;i++)
		{
			apm = apm + (ap_mean[i]*aP[i] + bp_mean[i]*bP[i]);
            apa = apa + (ap_amp[i] *aP[i] + bp_amp[i] *bP[i]);
		}
		pres0  = apm + apa * cos(doy/365.25 * 2 * PI);
		//     height correction for pressure
        pressure = pres0 * pow(1 - 0.0000226 * hort,5.225);

        //     Surface temperature
		atm = 0.0;
        ata = 0.0;
		for(int i = 0; i < 55;i++)
		{
			atm = atm + (at_mean[i]*aP[i] + bt_mean[i]*bP[i]);
            ata = ata + (at_amp[i] *aP[i] + bt_amp[i] *bP[i]);
		}
		temp0  = atm + ata * cos(doy/365.25 * 2 * PI);    

        //     height correction for temperature
        temperature = temp0 - 0.0065 * hort;

	}
	 //子程序名称： GlobalPT_IERS   
	 //功能：根据测站经纬高计算压强和温度
	 //变量类型：dmjd               : 修正的儒略日(modified julian date)
	 //          latitude           : 纬度，弧段
	 //          longitude          : 经度，弧段
	 //          height             : 测站高度，m
	 //          pressure           : 压强，hPa
	 //          temperature        : 温度，摄氏度
	 //          undu               : 大地水准面波动，m（Geoid undulation in m (from a 9x9 EGM based model)）//
	 //输入：dmjd，latitude，longitude，height
	 //输出：pressure，temperature,undu
	 //语言：C++
	 //创建者：刘俊宏
	 //创建时间：2012/10/21
	 //版本时间：
	 //修改记录：
	 //备注：参考IERS规范的GPT.F文件编写
	void GlobalPT_IERS(double dmjd,double latitude,double longitude,double height,double &pressure,double &temperature,double &undu)
	{
		double  V[10][10],W[10][10],doy,apm,apa
               ,pres0,atm,ata,temp0,hort,X,Y,Z;
	    doy = dmjd  - 44239 + 1 - 28;//年积日(44239为1980年1月1日)
		//double  a_geoid[55] = {
		//	 -5.6195e-001,-6.0794e-002,-2.0125e-001,-6.4180e-002,-3.6997e-002,
		//	 +1.0098e+001,+1.6436e+001,+1.4065e+001,+1.9881e+000,+6.4414e-001,
		//	 -4.7482e+000,-3.2290e+000,+5.0652e-001,+3.8279e-001,-2.6646e-002,
		//	 +1.7224e+000,-2.7970e-001,+6.8177e-001,-9.6658e-002,-1.5113e-002,
		//	 +2.9206e-003,-3.4621e+000,-3.8198e-001,+3.2306e-002,+6.9915e-003,
		//	 -2.3068e-003,-1.3548e-003,+4.7324e-006,+2.3527e+000,+1.2985e+000,
		//	 +2.1232e-001,+2.2571e-002,-3.7855e-003,+2.9449e-005,-1.6265e-004,
		//	 +1.1711e-007,+1.6732e+000,+1.9858e-001,+2.3975e-002,-9.0013e-004,
		//	 -2.2475e-003,-3.3095e-005,-1.2040e-005,+2.2010e-006,-1.0083e-006,
		//	 +8.6297e-001,+5.8231e-001,+2.0545e-002,-7.8110e-003,-1.4085e-004,
		//	 -8.8459e-006,+5.7256e-006,-1.5068e-006,+4.0095e-007,-2.4185e-008};//

		//double b_geoid[55] = {
		//	 +0.0000e+000,+0.0000e+000,-6.5993e-002,+0.0000e+000,+6.5364e-002,
		//	 -5.8320e+000,+0.0000e+000,+1.6961e+000,-1.3557e+000,+1.2694e+000,
		//	 +0.0000e+000,-2.9310e+000,+9.4805e-001,-7.6243e-002,+4.1076e-002,
		//	 +0.0000e+000,-5.1808e-001,-3.4583e-001,-4.3632e-002,+2.2101e-003,
		//	 -1.0663e-002,+0.0000e+000,+1.0927e-001,-2.9463e-001,+1.4371e-003,
		//	 -1.1452e-002,-2.8156e-003,-3.5330e-004,+0.0000e+000,+4.4049e-001,
		//	 +5.5653e-002,-2.0396e-002,-1.7312e-003,+3.5805e-005,+7.2682e-005,
		//	 +2.2535e-006,+0.0000e+000,+1.9502e-002,+2.7919e-002,-8.1812e-003,
		//	 +4.4540e-004,+8.8663e-005,+5.5596e-005,+2.4826e-006,+1.0279e-006,
		//	 +0.0000e+000,+6.0529e-002,-3.5824e-002,-5.1367e-003,+3.0119e-005,
		//	 -2.9911e-005,+1.9844e-005,-1.2349e-006,-7.6756e-009,+5.0100e-008};

		//double ap_mean[55] = {
		//	 +1.0108e+003,+8.4886e+000,+1.4799e+000,-1.3897e+001,+3.7516e-003,
		//	 -1.4936e-001,+1.2232e+001,-7.6615e-001,-6.7699e-002,+8.1002e-003,
		//	 -1.5874e+001,+3.6614e-001,-6.7807e-002,-3.6309e-003,+5.9966e-004,
		//	 +4.8163e+000,-3.7363e-001,-7.2071e-002,+1.9998e-003,-6.2385e-004,
		//	 -3.7916e-004,+4.7609e+000,-3.9534e-001,+8.6667e-003,+1.1569e-002,
		//	 +1.1441e-003,-1.4193e-004,-8.5723e-005,+6.5008e-001,-5.0889e-001,
		//	 -1.5754e-002,-2.8305e-003,+5.7458e-004,+3.2577e-005,-9.6052e-006,
		//	 -2.7974e-006,+1.3530e+000,-2.7271e-001,-3.0276e-004,+3.6286e-003,
		//	 -2.0398e-004,+1.5846e-005,-7.7787e-006,+1.1210e-006,+9.9020e-008,
		//	 +5.5046e-001,-2.7312e-001,+3.2532e-003,-2.4277e-003,+1.1596e-004,
		//	 +2.6421e-007,-1.3263e-006,+2.7322e-007,+1.4058e-007,+4.9414e-009}; 

		//double bp_mean[55] = {
		//	 +0.0000e+000,+0.0000e+000,-1.2878e+000,+0.0000e+000,+7.0444e-001,
		//	 +3.3222e-001,+0.0000e+000,-2.9636e-001,+7.2248e-003,+7.9655e-003,
		//	 +0.0000e+000,+1.0854e+000,+1.1145e-002,-3.6513e-002,+3.1527e-003,
		//	 +0.0000e+000,-4.8434e-001,+5.2023e-002,-1.3091e-002,+1.8515e-003,
		//	 +1.5422e-004,+0.0000e+000,+6.8298e-001,+2.5261e-003,-9.9703e-004,
		//	 -1.0829e-003,+1.7688e-004,-3.1418e-005,+0.0000e+000,-3.7018e-001,
		//	 +4.3234e-002,+7.2559e-003,+3.1516e-004,+2.0024e-005,-8.0581e-006,
		//	 -2.3653e-006,+0.0000e+000,+1.0298e-001,-1.5086e-002,+5.6186e-003,
		//	 +3.2613e-005,+4.0567e-005,-1.3925e-006,-3.6219e-007,-2.0176e-008,
		//	 +0.0000e+000,-1.8364e-001,+1.8508e-002,+7.5016e-004,-9.6139e-005,
		//	 -3.1995e-006,+1.3868e-007,-1.9486e-007,+3.0165e-010,-6.4376e-010};

		//double ap_amp[55] = {
		//	 -1.0444e-001,+1.6618e-001,-6.3974e-002,+1.0922e+000,+5.7472e-001,
		//	 -3.0277e-001,-3.5087e+000,+7.1264e-003,-1.4030e-001,+3.7050e-002,
		//	 +4.0208e-001,-3.0431e-001,-1.3292e-001,+4.6746e-003,-1.5902e-004,
		//	 +2.8624e+000,-3.9315e-001,-6.4371e-002,+1.6444e-002,-2.3403e-003,
		//	 +4.2127e-005,+1.9945e+000,-6.0907e-001,-3.5386e-002,-1.0910e-003,
		//	 -1.2799e-004,+4.0970e-005,+2.2131e-005,-5.3292e-001,-2.9765e-001,
		//	 -3.2877e-002,+1.7691e-003,+5.9692e-005,+3.1725e-005,+2.0741e-005,
		//	 -3.7622e-007,+2.6372e+000,-3.1165e-001,+1.6439e-002,+2.1633e-004,
		//	 +1.7485e-004,+2.1587e-005,+6.1064e-006,-1.3755e-008,-7.8748e-008,
		//	 -5.9152e-001,-1.7676e-001,+8.1807e-003,+1.0445e-003,+2.3432e-004,
		//	 +9.3421e-006,+2.8104e-006,-1.5788e-007,-3.0648e-008,+2.6421e-010}; 

		//double bp_amp[55] = {
		//	 +0.0000e+000,+0.0000e+000,+9.3340e-001,+0.0000e+000,+8.2346e-001,
		//	 +2.2082e-001,+0.0000e+000,+9.6177e-001,-1.5650e-002,+1.2708e-003,
		//	 +0.0000e+000,-3.9913e-001,+2.8020e-002,+2.8334e-002,+8.5980e-004,
		//	 +0.0000e+000,+3.0545e-001,-2.1691e-002,+6.4067e-004,-3.6528e-005,
		//	 -1.1166e-004,+0.0000e+000,-7.6974e-002,-1.8986e-002,+5.6896e-003,
		//	 -2.4159e-004,-2.3033e-004,-9.6783e-006,+0.0000e+000,-1.0218e-001,
		//	 -1.3916e-002,-4.1025e-003,-5.1340e-005,-7.0114e-005,-3.3152e-007,
		//	 +1.6901e-006,+0.0000e+000,-1.2422e-002,+2.5072e-003,+1.1205e-003,
		//	 -1.3034e-004,-2.3971e-005,-2.6622e-006,+5.7852e-007,+4.5847e-008,
		//	 +0.0000e+000,+4.4777e-002,-3.0421e-003,+2.6062e-005,-7.2421e-005,
		//	 +1.9119e-006,+3.9236e-007,+2.2390e-007,+2.9765e-009,-4.6452e-009}; 

		//double at_mean[55] = {
		//	 +1.6257e+001,+2.1224e+000,+9.2569e-001,-2.5974e+001,+1.4510e+000,
		//	 +9.2468e-002,-5.3192e-001,+2.1094e-001,-6.9210e-002,-3.4060e-002,
		//	 -4.6569e+000,+2.6385e-001,-3.6093e-002,+1.0198e-002,-1.8783e-003,
		//	 +7.4983e-001,+1.1741e-001,+3.9940e-002,+5.1348e-003,+5.9111e-003,
		//	 +8.6133e-006,+6.3057e-001,+1.5203e-001,+3.9702e-002,+4.6334e-003,
		//	 +2.4406e-004,+1.5189e-004,+1.9581e-007,+5.4414e-001,+3.5722e-001,
		//	 +5.2763e-002,+4.1147e-003,-2.7239e-004,-5.9957e-005,+1.6394e-006,
		//	 -7.3045e-007,-2.9394e+000,+5.5579e-002,+1.8852e-002,+3.4272e-003,
		//	 -2.3193e-005,-2.9349e-005,+3.6397e-007,+2.0490e-006,-6.4719e-008,
		//	 -5.2225e-001,+2.0799e-001,+1.3477e-003,+3.1613e-004,-2.2285e-004,
		//	 -1.8137e-005,-1.5177e-007,+6.1343e-007,+7.8566e-008,+1.0749e-009};

		//double bt_mean[55] = {
		//	 +0.0000e+000,+0.0000e+000,+1.0210e+000,+0.0000e+000,+6.0194e-001,
		//	 +1.2292e-001,+0.0000e+000,-4.2184e-001,+1.8230e-001,+4.2329e-002,
		//	 +0.0000e+000,+9.3312e-002,+9.5346e-002,-1.9724e-003,+5.8776e-003,
		//	 +0.0000e+000,-2.0940e-001,+3.4199e-002,-5.7672e-003,-2.1590e-003,
		//	 +5.6815e-004,+0.0000e+000,+2.2858e-001,+1.2283e-002,-9.3679e-003,
		//	 -1.4233e-003,-1.5962e-004,+4.0160e-005,+0.0000e+000,+3.6353e-002,
		//	 -9.4263e-004,-3.6762e-003,+5.8608e-005,-2.6391e-005,+3.2095e-006,
		//	 -1.1605e-006,+0.0000e+000,+1.6306e-001,+1.3293e-002,-1.1395e-003,
		//	 +5.1097e-005,+3.3977e-005,+7.6449e-006,-1.7602e-007,-7.6558e-008,
		//	 +0.0000e+000,-4.5415e-002,-1.8027e-002,+3.6561e-004,-1.1274e-004,
		//	 +1.3047e-005,+2.0001e-006,-1.5152e-007,-2.7807e-008,+7.7491e-009}; 

		//double at_amp[55] = {
		//	 -1.8654e+000,-9.0041e+000,-1.2974e-001,-3.6053e+000,+2.0284e-002,
		//	 +2.1872e-001,-1.3015e+000,+4.0355e-001,+2.2216e-001,-4.0605e-003,
		//	 +1.9623e+000,+4.2887e-001,+2.1437e-001,-1.0061e-002,-1.1368e-003,
		//	 -6.9235e-002,+5.6758e-001,+1.1917e-001,-7.0765e-003,+3.0017e-004,
		//	 +3.0601e-004,+1.6559e+000,+2.0722e-001,+6.0013e-002,+1.7023e-004,
		//	 -9.2424e-004,+1.1269e-005,-6.9911e-006,-2.0886e+000,-6.7879e-002,
		//	 -8.5922e-004,-1.6087e-003,-4.5549e-005,+3.3178e-005,-6.1715e-006,
		//	 -1.4446e-006,-3.7210e-001,+1.5775e-001,-1.7827e-003,-4.4396e-004,
		//	 +2.2844e-004,-1.1215e-005,-2.1120e-006,-9.6421e-007,-1.4170e-008,
		//	 +7.8720e-001,-4.4238e-002,-1.5120e-003,-9.4119e-004,+4.0645e-006,
		//	 -4.9253e-006,-1.8656e-006,-4.0736e-007,-4.9594e-008,+1.6134e-009}; 

		//double bt_amp[55] = { 
		//	 +0.0000e+000,+0.0000e+000,-8.9895e-001,+0.0000e+000,-1.0790e+000,
		//	 -1.2699e-001,+0.0000e+000,-5.9033e-001,+3.4865e-002,-3.2614e-002,
		//	 +0.0000e+000,-2.4310e-002,+1.5607e-002,-2.9833e-002,-5.9048e-003,
		//	 +0.0000e+000,+2.8383e-001,+4.0509e-002,-1.8834e-002,-1.2654e-003,
		//	 -1.3794e-004,+0.0000e+000,+1.3306e-001,+3.4960e-002,-3.6799e-003,
		//	 -3.5626e-004,+1.4814e-004,+3.7932e-006,+0.0000e+000,+2.0801e-001,
		//	 +6.5640e-003,-3.4893e-003,-2.7395e-004,+7.4296e-005,-7.9927e-006,
		//	 -1.0277e-006,+0.0000e+000,+3.6515e-002,-7.4319e-003,-6.2873e-004,
		//	 -8.2461e-005,+3.1095e-005,-5.3860e-007,-1.2055e-007,-1.1517e-007,
		//	 +0.0000e+000,+3.1404e-002,+1.5580e-002,-1.1428e-003,+3.3529e-005,
		//	 +1.0387e-005,-1.9378e-006,-2.7327e-007,+7.5833e-009,-9.2323e-009}; 
		double  a_geoid[55] = {
			 -5.6195e-001,-6.0794e-002,-2.0125e-001,-6.4180e-002,-3.6997e-002,
			 +1.0098e+001,+1.6436e+001,+1.4065e+001,+1.9881e+000,+6.4414e-001,
			 -4.7482e+000,-3.2290e+000,+5.0652e-001,+3.8279e-001,-2.6646e-002,
			 +1.7224e+000,-2.7970e-001,+6.8177e-001,-9.6658e-002,-1.5113e-002,
			 +2.9206e-003,-3.4621e+000,-3.8198e-001,+3.2306e-002,+6.9915e-003,
			 -2.3068e-003,-1.3548e-003,+4.7324e-006,+2.3527e+000,+1.2985e+000,
			 +2.1232e-001,+2.2571e-002,-3.7855e-003,+2.9449e-005,-1.6265e-004,
			 +1.1711e-007,+1.6732e+000,+1.9858e-001,+2.3975e-002,-9.0013e-004,
			 -2.2475e-003,-3.3095e-005,-1.2040e-005,+2.2010e-006,-1.0083e-006,
			 +8.6297e-001,+5.8231e-001,+2.0545e-002,-7.8110e-003,-1.4085e-004,
			 -8.8459e-006,+5.7256e-006,-1.5068e-006,+4.0095e-007,-2.4185e-008};
		double  b_geoid[55] = {
			 +0.0000e+000,+0.0000e+000,-6.5993e-002,+0.0000e+000,+6.5364e-002,
			 -5.8320e+000,+0.0000e+000,+1.6961e+000,-1.3557e+000,+1.2694e+000,
			 +0.0000e+000,-2.9310e+000,+9.4805e-001,-7.6243e-002,+4.1076e-002,
			 +0.0000e+000,-5.1808e-001,-3.4583e-001,-4.3632e-002,+2.2101e-003,
			 -1.0663e-002,+0.0000e+000,+1.0927e-001,-2.9463e-001,+1.4371e-003,
			 -1.1452e-002,-2.8156e-003,-3.5330e-004,+0.0000e+000,+4.4049e-001,
			 +5.5653e-002,-2.0396e-002,-1.7312e-003,+3.5805e-005,+7.2682e-005,
			 +2.2535e-006,+0.0000e+000,+1.9502e-002,+2.7919e-002,-8.1812e-003,
			 +4.4540e-004,+8.8663e-005,+5.5596e-005,+2.4826e-006,+1.0279e-006,
			 +0.0000e+000,+6.0529e-002,-3.5824e-002,-5.1367e-003,+3.0119e-005,
			 -2.9911e-005,+1.9844e-005,-1.2349e-006,-7.6756e-009,+5.0100e-008};
		double  ap_mean[55] = {
			 +1.0108e+003,+8.4886e+000,+1.4799e+000,-1.3897e+001,+3.7516e-003,
			 -1.4936e-001,+1.2232e+001,-7.6615e-001,-6.7699e-002,+8.1002e-003,
			 -1.5874e+001,+3.6614e-001,-6.7807e-002,-3.6309e-003,+5.9966e-004,
			 +4.8163e+000,-3.7363e-001,-7.2071e-002,+1.9998e-003,-6.2385e-004,
			 -3.7916e-004,+4.7609e+000,-3.9534e-001,+8.6667e-003,+1.1569e-002,
			 +1.1441e-003,-1.4193e-004,-8.5723e-005,+6.5008e-001,-5.0889e-001,
			 -1.5754e-002,-2.8305e-003,+5.7458e-004,+3.2577e-005,-9.6052e-006,
			 -2.7974e-006,+1.3530e+000,-2.7271e-001,-3.0276e-004,+3.6286e-003,
			 -2.0398e-004,+1.5846e-005,-7.7787e-006,+1.1210e-006,+9.9020e-008,
			 +5.5046e-001,-2.7312e-001,+3.2532e-003,-2.4277e-003,+1.1596e-004,
			 +2.6421e-007,-1.3263e-006,+2.7322e-007,+1.4058e-007,+4.9414e-009};
		double  bp_mean[55] = {
			 +0.0000e+000,+0.0000e+000,-1.2878e+000,+0.0000e+000,+7.0444e-001,
			 +3.3222e-001,+0.0000e+000,-2.9636e-001,+7.2248e-003,+7.9655e-003,
			 +0.0000e+000,+1.0854e+000,+1.1145e-002,-3.6513e-002,+3.1527e-003,
			 +0.0000e+000,-4.8434e-001,+5.2023e-002,-1.3091e-002,+1.8515e-003,
			 +1.5422e-004,+0.0000e+000,+6.8298e-001,+2.5261e-003,-9.9703e-004,
			 -1.0829e-003,+1.7688e-004,-3.1418e-005,+0.0000e+000,-3.7018e-001,
			 +4.3234e-002,+7.2559e-003,+3.1516e-004,+2.0024e-005,-8.0581e-006,
			 -2.3653e-006,+0.0000e+000,+1.0298e-001,-1.5086e-002,+5.6186e-003,
			 +3.2613e-005,+4.0567e-005,-1.3925e-006,-3.6219e-007,-2.0176e-008,
			 +0.0000e+000,-1.8364e-001,+1.8508e-002,+7.5016e-004,-9.6139e-005,
			 -3.1995e-006,+1.3868e-007,-1.9486e-007,+3.0165e-010,-6.4376e-010};
		double  ap_amp[55]  = {
		     -1.0444e-001,+1.6618e-001,-6.3974e-002,+1.0922e+000,+5.7472e-001,
			 -3.0277e-001,-3.5087e+000,+7.1264e-003,-1.4030e-001,+3.7050e-002,
			 +4.0208e-001,-3.0431e-001,-1.3292e-001,+4.6746e-003,-1.5902e-004,
			 +2.8624e+000,-3.9315e-001,-6.4371e-002,+1.6444e-002,-2.3403e-003,
			 +4.2127e-005,+1.9945e+000,-6.0907e-001,-3.5386e-002,-1.0910e-003,
			 -1.2799e-004,+4.0970e-005,+2.2131e-005,-5.3292e-001,-2.9765e-001,
			 -3.2877e-002,+1.7691e-003,+5.9692e-005,+3.1725e-005,+2.0741e-005,
			 -3.7622e-007,+2.6372e+000,-3.1165e-001,+1.6439e-002,+2.1633e-004,
			 +1.7485e-004,+2.1587e-005,+6.1064e-006,-1.3755e-008,-7.8748e-008,
			 -5.9152e-001,-1.7676e-001,+8.1807e-003,+1.0445e-003,+2.3432e-004,
			 +9.3421e-006,+2.8104e-006,-1.5788e-007,-3.0648e-008,+2.6421e-010};
		double  bp_amp[55]  = {
		     +0.0000e+000,+0.0000e+000,+9.3340e-001,+0.0000e+000,+8.2346e-001,
			 +2.2082e-001,+0.0000e+000,+9.6177e-001,-1.5650e-002,+1.2708e-003,
			 +0.0000e+000,-3.9913e-001,+2.8020e-002,+2.8334e-002,+8.5980e-004,
			 +0.0000e+000,+3.0545e-001,-2.1691e-002,+6.4067e-004,-3.6528e-005,
			 -1.1166e-004,+0.0000e+000,-7.6974e-002,-1.8986e-002,+5.6896e-003,
			 -2.4159e-004,-2.3033e-004,-9.6783e-006,+0.0000e+000,-1.0218e-001,
			 -1.3916e-002,-4.1025e-003,-5.1340e-005,-7.0114e-005,-3.3152e-007,
			 +1.6901e-006,+0.0000e+000,-1.2422e-002,+2.5072e-003,+1.1205e-003,
			 -1.3034e-004,-2.3971e-005,-2.6622e-006,+5.7852e-007,+4.5847e-008,
			 +0.0000e+000,+4.4777e-002,-3.0421e-003,+2.6062e-005,-7.2421e-005,
			 +1.9119e-006,+3.9236e-007,+2.2390e-007,+2.9765e-009,-4.6452e-009};
		double  at_mean[55] = {
			 +1.6257e+001,+2.1224e+000,+9.2569e-001,-2.5974e+001,+1.4510e+000,
			 +9.2468e-002,-5.3192e-001,+2.1094e-001,-6.9210e-002,-3.4060e-002,
			 -4.6569e+000,+2.6385e-001,-3.6093e-002,+1.0198e-002,-1.8783e-003,
			 +7.4983e-001,+1.1741e-001,+3.9940e-002,+5.1348e-003,+5.9111e-003,
			 +8.6133e-006,+6.3057e-001,+1.5203e-001,+3.9702e-002,+4.6334e-003,
			 +2.4406e-004,+1.5189e-004,+1.9581e-007,+5.4414e-001,+3.5722e-001,
			 +5.2763e-002,+4.1147e-003,-2.7239e-004,-5.9957e-005,+1.6394e-006,
			 -7.3045e-007,-2.9394e+000,+5.5579e-002,+1.8852e-002,+3.4272e-003,
			 -2.3193e-005,-2.9349e-005,+3.6397e-007,+2.0490e-006,-6.4719e-008,
			 -5.2225e-001,+2.0799e-001,+1.3477e-003,+3.1613e-004,-2.2285e-004,
			 -1.8137e-005,-1.5177e-007,+6.1343e-007,+7.8566e-008,+1.0749e-009};
		double  bt_mean[55] = {
		     +0.0000e+000,+0.0000e+000,+1.0210e+000,+0.0000e+000,+6.0194e-001,
			 +1.2292e-001,+0.0000e+000,-4.2184e-001,+1.8230e-001,+4.2329e-002,
			 +0.0000e+000,+9.3312e-002,+9.5346e-002,-1.9724e-003,+5.8776e-003,
			 +0.0000e+000,-2.0940e-001,+3.4199e-002,-5.7672e-003,-2.1590e-003,
			 +5.6815e-004,+0.0000e+000,+2.2858e-001,+1.2283e-002,-9.3679e-003,
			 -1.4233e-003,-1.5962e-004,+4.0160e-005,+0.0000e+000,+3.6353e-002,
			 -9.4263e-004,-3.6762e-003,+5.8608e-005,-2.6391e-005,+3.2095e-006,
			 -1.1605e-006,+0.0000e+000,+1.6306e-001,+1.3293e-002,-1.1395e-003,
			 +5.1097e-005,+3.3977e-005,+7.6449e-006,-1.7602e-007,-7.6558e-008,
			 +0.0000e+000,-4.5415e-002,-1.8027e-002,+3.6561e-004,-1.1274e-004,
			 +1.3047e-005,+2.0001e-006,-1.5152e-007,-2.7807e-008,+7.7491e-009};
		double  at_amp[55]  = {
			 -1.8654e+000,-9.0041e+000,-1.2974e-001,-3.6053e+000,+2.0284e-002,
			 +2.1872e-001,-1.3015e+000,+4.0355e-001,+2.2216e-001,-4.0605e-003,
			 +1.9623e+000,+4.2887e-001,+2.1437e-001,-1.0061e-002,-1.1368e-003,
			 -6.9235e-002,+5.6758e-001,+1.1917e-001,-7.0765e-003,+3.0017e-004,
			 +3.0601e-004,+1.6559e+000,+2.0722e-001,+6.0013e-002,+1.7023e-004,
			 -9.2424e-004,+1.1269e-005,-6.9911e-006,-2.0886e+000,-6.7879e-002,
			 -8.5922e-004,-1.6087e-003,-4.5549e-005,+3.3178e-005,-6.1715e-006,
			 -1.4446e-006,-3.7210e-001,+1.5775e-001,-1.7827e-003,-4.4396e-004,
			 +2.2844e-004,-1.1215e-005,-2.1120e-006,-9.6421e-007,-1.4170e-008,
			 +7.8720e-001,-4.4238e-002,-1.5120e-003,-9.4119e-004,+4.0645e-006,
			 -4.9253e-006,-1.8656e-006,-4.0736e-007,-4.9594e-008,+1.6134e-009};
		double  bt_amp[55]  = {
			 +0.0000e+000,+0.0000e+000,-8.9895e-001,+0.0000e+000,-1.0790e+000,
			 -1.2699e-001,+0.0000e+000,-5.9033e-001,+3.4865e-002,-3.2614e-002,
			 +0.0000e+000,-2.4310e-002,+1.5607e-002,-2.9833e-002,-5.9048e-003,
			 +0.0000e+000,+2.8383e-001,+4.0509e-002,-1.8834e-002,-1.2654e-003,
			 -1.3794e-004,+0.0000e+000,+1.3306e-001,+3.4960e-002,-3.6799e-003,
			 -3.5626e-004,+1.4814e-004,+3.7932e-006,+0.0000e+000,+2.0801e-001,
			 +6.5640e-003,-3.4893e-003,-2.7395e-004,+7.4296e-005,-7.9927e-006,
			 -1.0277e-006,+0.0000e+000,+3.6515e-002,-7.4319e-003,-6.2873e-004,
			 -8.2461e-005,+3.1095e-005,-5.3860e-007,-1.2055e-007,-1.1517e-007,
			 +0.0000e+000,+3.1404e-002,+1.5580e-002,-1.1428e-003,+3.3529e-005,
			 +1.0387e-005,-1.9378e-006,-2.7327e-007,+7.5833e-009,-9.2323e-009};





		//    parameter t
        // t = sin(latitude);
	 //  FILE * pfile_AB_GEOID = fopen("C:\\test_GPT_AB_GEOID_IERS.data","w+");	  
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",a_geoid[i]);	   
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",b_geoid[i]);
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",ap_mean[i]);
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",bp_mean[i]);
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",ap_amp[i]);
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",bp_amp[i]);
	 //   fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",at_mean[i]);
	 //  fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",bt_mean[i]);
	 //   fprintf(pfile_AB_GEOID,"\n");
	 //  for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",at_amp[i]);
	 //   fprintf(pfile_AB_GEOID,"\n");
		//for(int i = 0; i < 55; i ++)	   
		//   fprintf(pfile_AB_GEOID,"%12.4e  ",bt_amp[i]);
	 //   fprintf(pfile_AB_GEOID,"\n");
	 //  fclose(pfile_AB_GEOID);//

       
        //   Define degree n and order m EGM
        int NMAX = 9;
        int MMAX = 9;

		// Define unit vector
		X = cos(latitude) * cos(longitude);
		Y = cos(latitude) * sin(longitude);
		Z = sin(latitude);	
		//FILE * pfile_V = fopen("C:\\test_GPT_V.data","w+");
		//FILE * pfile_W = fopen("C:\\test_GPT_W.data","w+");
		for (int i = 0; i < 10; i ++)
		{
			for(int j = 0; j < 10; j ++)
			{
				V[i][j] = 0;
				W[i][j] = 0;
			}
		}

		// Legendre polynomials
        V[0][0] = 1.0;
        W[0][0] = 0.0;
        V[1][0] = Z * V[0][0];
        W[1][0] = 0.0;

		for(int N = 2; N <= NMAX; N ++)//
		{
			V[N][0] = ((2 * N - 1) * Z * V[N - 1][0] - (N - 1) * V[N - 2][0]) / N;
			W[N][0] = 0.0;
		}
		for (int M = 1; M <= NMAX; M ++)
		{
			V[M][M] = (2 * M - 1) * (X * V[M - 1][M - 1] - Y * W[M - 1][M - 1]);
			W[M][M] = (2 * M - 1) * (X * W[M - 1][M - 1] + Y * V[M - 1][M - 1]);
			if( M < NMAX)
			{
				V[M + 1][M] = (2 * M + 1) * Z * V[M][M];
				W[M + 1][M] = (2 * M + 1) * Z * W[M][M];
			}
			for ( int N = M + 2; N <= NMAX; N ++)
			{
				V[N][M] = ((2 * N - 1) * Z * V[N - 1][M] - (N + M - 1) * V[N - 2][M]) / (N - M);
				W[N][M] = ((2 * N - 1) * Z * W[N - 1][M] - (N + M - 1) * W[N - 2][M]) / (N - M);
			}
		}
		//for(int i = 0; i < 10; i ++)
		//{
		//	for(int j = 0; j < 10; j ++)
		//	{
		//		fprintf(pfile_V,"%16.4lf  ",V[i][j]);
		//	}
		//	fprintf(pfile_V,"\n");
		//	for(int j = 0; j < 10; j ++)
		//	{
		//		fprintf(pfile_W,"%16.4lf  ",W[i][j]);
		//	}
		//	fprintf(pfile_W,"\n");
		//}
		//fclose(pfile_V);
		//fclose(pfile_W);//
		//    Geoidal height
		undu = 0.0;
		int I = 0;
		for(int N = 0; N <= NMAX; N ++)
		{
			for(int M = 0; M <= N; M ++)
			{			
				undu = undu + (a_geoid[I] * V[N][M] +  b_geoid[I] * W[N][M]);
				I = I + 1;
			}
		}
        //     orthometric height
        hort = height - undu;
		//     Surface pressure

		apm = 0.0;
        apa = 0.0;
		I = 0;
		for(int N = 0; N <= NMAX; N ++)
		{
			for(int M = 0; M <= N; M ++)
			{
				apm = apm + (ap_mean[I] * V[N][M] + bp_mean[I] * W[N][M]);
				apa = apa + (ap_amp[I]  * V[N][M] + bp_amp[I]  * W[N][M]);
				I = I + 1;
			}
		}      
		pres0  = apm + apa * cos(doy/365.25 * 2 * PI);
		//     height correction for pressure
        pressure = pres0 * pow(1 - 0.0000226 * hort,5.225);

        //     Surface temperature
		atm = 0.0;
        ata = 0.0;
		I = 0;
		for(int N = 0; N <= NMAX; N ++)
		{
			for(int M = 0; M <= N; M ++)
			{
				atm = atm + (at_mean[I] * V[N][M] + bt_mean[I] * W[N][M]);
				ata = ata + (at_amp[I]  * V[N][M] + bt_amp[I]  * W[N][M]);
				I = I + 1;
			}
		} 
		temp0  = atm + ata * cos(doy/365.25 * 2 * PI);    

        //     height correction for temperature
        temperature = temp0 - 0.0065 * hort;

	}
	 //子程序名称： GlobalMF   
	 //功能：计算干湿分量的映射函数
	 //变量类型：dmjd               : 修正的儒略日(modified julian date)
	 //          latitude           : 纬度，弧段
	 //          longitude          : 经度，弧段
	 //          height             : 测站高度，m
	 //          elevation          : 观测仰角，弧度
	 //          gmfh               : 干分量映射函数(hydrostatic global mapping function)
	 //          gmfw               : 湿分量映射函数(wet global mapping function)
	 //输入：dmjd，latitude，longitude，height，elevation
	 //输出：gmfh，gmfw
	 //语言：C++
	 //创建者：刘俊宏
	 //创建时间：2012/10/17
	 //版本时间：
	 //修改记录：
	 //备注：参考GAMIT的gmf.f文件编写//
	void GlobalMF(double dmjd,double latitude,double longitude,double height,double elevation,double &gmfh,double &gmfw)
	{
		double dfac[20],aP[55],bP[55],P[10][10];			  
		double doy,t,sum,bh,c0h,phh,c11h,c10h,ch,ahm,aha,ah,beta,
               gamma,topcon,a_ht,b_ht,c_ht,hs_km,ht_corr_coef,
               ht_corr,aw,bw,cw,awm,awa;
		doy = dmjd  - 44239 + 1 - 28;//年积日
		double ah_mean[55] = {
			 +1.2517e+02, +8.503e-01, +6.936e-02, -6.760e+00, +1.771e-01,
			  +1.130e-02, +5.963e-01, +1.808e-02, +2.801e-03, -1.414e-03,
			  -1.212e+00, +9.300e-02, +3.683e-03, +1.095e-03, +4.671e-05,
			  +3.959e-01, -3.867e-02, +5.413e-03, -5.289e-04, +3.229e-04,
			  +2.067e-05, +3.000e-01, +2.031e-02, +5.900e-03, +4.573e-04,
			  -7.619e-05, +2.327e-06, +3.845e-06, +1.182e-01, +1.158e-02,
			  +5.445e-03, +6.219e-05, +4.204e-06, -2.093e-06, +1.540e-07,
			  -4.280e-08, -4.751e-01, -3.490e-02, +1.758e-03, +4.019e-04,
			  -2.799e-06, -1.287e-06, +5.468e-07, +7.580e-08, -6.300e-09,
			  -1.160e-01, +8.301e-03, +8.771e-04, +9.955e-05, -1.718e-06,
			  -2.012e-06, +1.170e-08, +1.790e-08, -1.300e-09, +1.000e-10};
		double bh_mean[55] = {
			  +0.000e+00, +0.000e+00, +3.249e-02, +0.000e+00, +3.324e-02,
			  +1.850e-02, +0.000e+00, -1.115e-01, +2.519e-02, +4.923e-03,
			  +0.000e+00, +2.737e-02, +1.595e-02, -7.332e-04, +1.933e-04,
			  +0.000e+00, -4.796e-02, +6.381e-03, -1.599e-04, -3.685e-04,
			  +1.815e-05, +0.000e+00, +7.033e-02, +2.426e-03, -1.111e-03,
			  -1.357e-04, -7.828e-06, +2.547e-06, +0.000e+00, +5.779e-03,
			  +3.133e-03, -5.312e-04, -2.028e-05, +2.323e-07, -9.100e-08,
			  -1.650e-08, +0.000e+00, +3.688e-02, -8.638e-04, -8.514e-05,
			  -2.828e-05, +5.403e-07, +4.390e-07, +1.350e-08, +1.800e-09,
			  +0.000e+00, -2.736e-02, -2.977e-04, +8.113e-05, +2.329e-07,
			  +8.451e-07, +4.490e-08, -8.100e-09, -1.500e-09, +2.000e-10};
       
	    double ah_amp[55] = {
			  -2.738e-01, -2.837e+00, +1.298e-02, -3.588e-01, +2.413e-02,
			  +3.427e-02, -7.624e-01, +7.272e-02, +2.160e-02, -3.385e-03,
			  +4.424e-01, +3.722e-02, +2.195e-02, -1.503e-03, +2.426e-04,
			  +3.013e-01, +5.762e-02, +1.019e-02, -4.476e-04, +6.790e-05,
			  +3.227e-05, +3.123e-01, -3.535e-02, +4.840e-03, +3.025e-06,
			  -4.363e-05, +2.854e-07, -1.286e-06, -6.725e-01, -3.730e-02,
			  +8.964e-04, +1.399e-04, -3.990e-06, +7.431e-06, -2.796e-07,
			  -1.601e-07, +4.068e-02, -1.352e-02, +7.282e-04, +9.594e-05,
			  +2.070e-06, -9.620e-08, -2.742e-07, -6.370e-08, -6.300e-09,
			  +8.625e-02, -5.971e-03, +4.705e-04, +2.335e-05, +4.226e-06,
			  +2.475e-07, -8.850e-08, -3.600e-08, -2.900e-09, +0.000e+00};
       
	    double bh_amp[55] = {
			  +0.000e+00, +0.000e+00, -1.136e-01, +0.000e+00, -1.868e-01,
			  -1.399e-02, +0.000e+00, -1.043e-01, +1.175e-02, -2.240e-03,
			  +0.000e+00, -3.222e-02, +1.333e-02, -2.647e-03, -2.316e-05,
			  +0.000e+00, +5.339e-02, +1.107e-02, -3.116e-03, -1.079e-04,
			  -1.299e-05, +0.000e+00, +4.861e-03, +8.891e-03, -6.448e-04,
			  -1.279e-05, +6.358e-06, -1.417e-07, +0.000e+00, +3.041e-02,
			  +1.150e-03, -8.743e-04, -2.781e-05, +6.367e-07, -1.140e-08,
			  -4.200e-08, +0.000e+00, -2.982e-02, -3.000e-03, +1.394e-05,
			  -3.290e-05, -1.705e-07, +7.440e-08, +2.720e-08, -6.600e-09,
			  +0.000e+00, +1.236e-02, -9.981e-04, -3.792e-05, -1.355e-05,
			  +1.162e-06, -1.789e-07, +1.470e-08, -2.400e-09, -4.000e-10};
       
		double aw_mean[55] = {
			  +5.640e+01, +1.555e+00, -1.011e+00, -3.975e+00, +3.171e-02,
			  +1.065e-01, +6.175e-01, +1.376e-01, +4.229e-02, +3.028e-03,
			  +1.688e+00, -1.692e-01, +5.478e-02, +2.473e-02, +6.059e-04,
			  +2.278e+00, +6.614e-03, -3.505e-04, -6.697e-03, +8.402e-04,
			  +7.033e-04, -3.236e+00, +2.184e-01, -4.611e-02, -1.613e-02,
			  -1.604e-03, +5.420e-05, +7.922e-05, -2.711e-01, -4.406e-01,
			  -3.376e-02, -2.801e-03, -4.090e-04, -2.056e-05, +6.894e-06,
			  +2.317e-06, +1.941e+00, -2.562e-01, +1.598e-02, +5.449e-03,
			  +3.544e-04, +1.148e-05, +7.503e-06, -5.667e-07, -3.660e-08,
			  +8.683e-01, -5.931e-02, -1.864e-03, -1.277e-04, +2.029e-04,
			  +1.269e-05, +1.629e-06, +9.660e-08, -1.015e-07, -5.000e-10};
       
		double bw_mean[55] = {
			  +0.000e+00, +0.000e+00, +2.592e-01, +0.000e+00, +2.974e-02,
			  -5.471e-01, +0.000e+00, -5.926e-01, -1.030e-01, -1.567e-02,
			  +0.000e+00, +1.710e-01, +9.025e-02, +2.689e-02, +2.243e-03,
			  +0.000e+00, +3.439e-01, +2.402e-02, +5.410e-03, +1.601e-03,
			  +9.669e-05, +0.000e+00, +9.502e-02, -3.063e-02, -1.055e-03,
			  -1.067e-04, -1.130e-04, +2.124e-05, +0.000e+00, -3.129e-01,
			  +8.463e-03, +2.253e-04, +7.413e-05, -9.376e-05, -1.606e-06,
			  +2.060e-06, +0.000e+00, +2.739e-01, +1.167e-03, -2.246e-05,
			  -1.287e-04, -2.438e-05, -7.561e-07, +1.158e-06, +4.950e-08,
			  +0.000e+00, -1.344e-01, +5.342e-03, +3.775e-04, -6.756e-05,
			  -1.686e-06, -1.184e-06, +2.768e-07, +2.730e-08, +5.700e-09};
       
		double aw_amp[55] = {
			  +1.023e-01, -2.695e+00, +3.417e-01, -1.405e-01, +3.175e-01,
			  +2.116e-01, +3.536e+00, -1.505e-01, -1.660e-02, +2.967e-02,
			  +3.819e-01, -1.695e-01, -7.444e-02, +7.409e-03, -6.262e-03,
			  -1.836e+00, -1.759e-02, -6.256e-02, -2.371e-03, +7.947e-04,
			  +1.501e-04, -8.603e-01, -1.360e-01, -3.629e-02, -3.706e-03,
			  -2.976e-04, +1.857e-05, +3.021e-05, +2.248e+00, -1.178e-01,
			  +1.255e-02, +1.134e-03, -2.161e-04, -5.817e-06, +8.836e-07,
			  -1.769e-07, +7.313e-01, -1.188e-01, +1.145e-02, +1.011e-03,
			  +1.083e-04, +2.570e-06, -2.140e-06, -5.710e-08, +2.000e-08,
			  -1.632e+00, -6.948e-03, -3.893e-03, +8.592e-04, +7.577e-05,
			  +4.539e-06, -3.852e-07, -2.213e-07, -1.370e-08, +5.800e-09};
       
		double bw_amp[55] = {
			  +0.000e+00, +0.000e+00, -8.865e-02, +0.000e+00, -4.309e-01,
			  +6.340e-02, +0.000e+00, +1.162e-01, +6.176e-02, -4.234e-03,
			  +0.000e+00, +2.530e-01, +4.017e-02, -6.204e-03, +4.977e-03,
			  +0.000e+00, -1.737e-01, -5.638e-03, +1.488e-04, +4.857e-04,
			  -1.809e-04, +0.000e+00, -1.514e-01, -1.685e-02, +5.333e-03,
			  -7.611e-05, +2.394e-05, +8.195e-06, +0.000e+00, +9.326e-02,
			  -1.275e-02, -3.071e-04, +5.374e-05, -3.391e-05, -7.436e-06,
			  +6.747e-07, +0.000e+00, -8.637e-02, -3.807e-03, -6.833e-04,
			  -3.861e-05, -2.268e-05, +1.454e-06, +3.860e-07, -1.068e-07,
			  +0.000e+00, -2.658e-02, -1.947e-03, +7.131e-04, -3.506e-05,
			  +1.885e-07, +5.792e-07, +3.990e-08, +2.000e-08, -5.700e-09};
		// parameter t	 
        t = sin(latitude);
        //degree n and order m
        int n = 9;
        int m = 9;
		// determine n!  // 需要确认，因为前两个数均等于1（2012.10.19）,(因为0! = 1)
        dfac[0] = 1;
	    for(int i = 0;i < 2 * n + 1;i++)
		   dfac[i+1] = dfac[i] * (i + 1);
		//determine Legendre functions (Heiskanen and Moritz, Physical Geodesy, 1967, eq. 1-62)
		for(int i = 0; i <= n; i++)
			for(int j = 0; j <= min(i,m);j++)
			{
				int ir = int((i - j)/2);
				sum = 0;				
				for(int k = 0;k <= ir; k++)
				{
					sum = sum + pow(-1.0,k)*dfac[2*i - 2*k]/dfac[k]/
                     dfac[i - k]/dfac[i - j - 2*k]*pow(t,i - j - 2*k);
				}
				//Legendre functions
				P[i][j] = 1/pow(2.0,i)*sqrt(pow(1 - pow(t,2),j))*sum;
			}
	    //    spherical harmonics
		int i = 0;
		for(int n = 0; n <= 9; n++)
			for(int m = 0; m <= n; m++)
			{			
				aP[i] = P[n][m] * cos(m * longitude);
				bP[i] = P[n][m] * sin(m * longitude);
				i = i + 1;
			}
		//    hydrostatic
	    bh = 0.0029;
        c0h = 0.062;
		if(latitude < 0)    // southern hemisphere
		{
			phh  = PI;
			c11h = 0.007;
			c10h = 0.002;
		}
		else           // northern hemisphere
		{
			phh  = 0;
			c11h = 0.005;
			c10h = 0.001;
		}
		ch = c0h + ((cos(doy/365.25 * 2 * PI + phh)+1) * c11h/2 + c10h) * (1-cos(latitude));

	    ahm = 0.0;
        aha = 0.0;
		for(int i = 0; i < 55;i++)
		{
			ahm = ahm + (ah_mean[i]*aP[i] + bh_mean[i]*bP[i])*1e-5;
            aha = aha + (ah_amp[i] *aP[i] + bh_amp[i] *bP[i])*1e-5;
		}
		ah  = ahm + aha * cos(doy/365.25 * 2 * PI);		
		beta   = bh/(sin(elevation) + ch  );
        gamma  = ah/(sin(elevation) + beta);
        topcon = (1 + ah/(1 + bh/(1 + ch)));
        gmfh   = topcon/(sin(elevation)+gamma);
		//     height correction for hydrostatic mapping function from Niell (1996)
        a_ht = 2.53e-5;
        b_ht = 5.49e-3;
        c_ht = 1.14e-3;
        hs_km  = height/1000;

        beta   = b_ht/(sin(elevation) + c_ht );
        gamma  = a_ht/(sin(elevation) + beta);
        topcon = (1 + a_ht/(1 + b_ht/(1 + c_ht)));
        ht_corr_coef = 1/sin(elevation) - topcon/(sin(elevation) + gamma);
        ht_corr      = ht_corr_coef * hs_km;
        gmfh         = gmfh + ht_corr;
		//    wet
        bw = 0.00146;
        cw = 0.04391;

        awm = 0.0;
        awa = 0.0;
		for(int i = 0; i < 55;i++)
		{
			awm = awm + (aw_mean[i]*aP[i] + bw_mean[i]*bP[i])*1e-5;
            awa = awa + (aw_amp[i] *aP[i] + bw_amp[i] *bP[i])*1e-5;
		}
		aw =  awm + awa * cos(doy/365.25 * 2 * PI);
		beta   = bw/(sin(elevation) + cw );
        gamma  = aw/(sin(elevation) + beta);
        topcon = (1 + aw/(1 + bw/(1 + cw)));
        gmfw   = topcon/(sin(elevation) + gamma); 
	}
	// 子程序名称： Troposphere_correct   
	// 功能：根据测站位置计算对流层修正量
	// 变量类型：dmjd               : 修正的儒略日(modified julian date)	
	//           station_position   : 测站位置，地固系
	//           elevation          : 观测仰角，弧度
	//           temperature        : 温度(摄氏温度)
	//           pressure           : 压强，mBar
	//           trop_delay         : 对流层延迟，m
	// 输入：dmjd，station_position
	// 输出：trop_delay
	// 语言：C++
	// 创建者：刘俊宏
	// 创建时间：2013/01/15
	// 版本时间：
	// 修改记录：
	// 备注：
	void Troposphere_correct(double dmjd,POS3D station_position,double elevation,double &temperature,double &pressure,double &trop_delay)
	{
		BLH blh; //纬度经度高度		
		double humidity = 50;		
		double undu = 0;
		double zpdh = 0;
		double zpdw = 0;
		double gmfh = 0;
		double gmfw = 0;
		TimeCoordConvert::XYZ2BLH(station_position,blh);		
		GlobalPT(dmjd,blh.B * PI/180,blh.L * PI/180,blh.H,pressure,temperature,undu);
		Saastamoinen_model(temperature,humidity,pressure,blh.B,blh.H,zpdh,zpdw);
		GlobalMF(dmjd,blh.B  * PI/180,blh.L  * PI/180,blh.H,elevation,gmfh,gmfw);
		trop_delay = zpdh * gmfh + zpdw * gmfw;

	}
}
